rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // 기본적으로 모든 접근 차단
    match /{document=**} {
      allow read, write: if false;
    }
    
    // 인증된 사용자만 접근 가능
    function isSignedIn() {
      return request.auth != null;
    }
    
    // 이메일 인증된 사용자만 접근 가능
    function isEmailVerified() {
      return request.auth.token.email_verified == true;
    }
    
    // 자신의 데이터만 접근 가능
    function isSelf(userId) {
      return request.auth.uid == userId;
    }
    
    // 자신의 도메인인지 확인
    function isSameDomain(domain) {
      return domain == request.auth.token.email.split('@')[1];
    }
    
    // 요청 시간이 유효한지 확인 (서버 시간과 5분 이내)
    function isValidTime(timeValue) {
      return timeValue.toMillis() <= request.time.toMillis() &&
            request.time.toMillis() - timeValue.toMillis() < 5 * 60 * 1000;
    }
    
    // userProfiles 컬렉션 규칙 (사용자 프로필 정보)
    match /userProfiles/{userId} {
      // 모든 인증된 사용자가 프로필 읽기 가능
      allow read: if isSignedIn();
      
      // 자신의 프로필만 생성 가능
      allow create: if isSignedIn() && isSelf(userId);
      
      // 자신의 프로필만 수정 가능
      allow update: if isSignedIn() && isSelf(userId);
      
      // 자신의 프로필만 삭제 가능
      allow delete: if isSignedIn() && isSelf(userId);
    }
    
    // userNicknames 컬렉션 - 닉네임 인덱싱용
    match /userNicknames/{nickname} {
      // 모든 인증된 사용자가 닉네임 확인 가능
      allow read: if isSignedIn();
      
      // 인증된 사용자만 닉네임 생성 가능
      allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
      
      // 자신의 닉네임만 삭제 가능
      allow delete: if isSignedIn() && resource.data.uid == request.auth.uid;
      
      // 업데이트는 불가능 (삭제 후 재생성)
      allow update: if false;
    }
    
    // users 컬렉션 규칙 (사용자 정보)
    match /users/{userId} {
      // 모든 인증된 사용자가 기본 정보 읽기 가능
      allow read: if isSignedIn();
      
      // 자신의 정보만 생성/수정 가능
      allow create, update: if isSignedIn() && isSelf(userId);
      
      // 삭제는 관리자만 가능 (추후 구현)
      allow delete: if false;
    }
    
    // user_info 컬렉션 규칙 (회원가입 정보)
    match /user_info/{docId} {
      // 인증된 사용자는 읽기 가능
      allow read: if isSignedIn();
      
      // 모든 사용자는 자신의 정보만 생성 가능
      allow create: if request.auth != null && 
                    request.resource.data.uid == request.auth.uid;
                    
      // 업데이트 및 삭제는 자신의 정보에 대해서만 가능
      allow update, delete: if isSignedIn() && 
                             resource.data.uid == request.auth.uid;
    }
    
    // activeUsers 컬렉션 규칙 (활성 사용자 정보)
    match /activeUsers/{userId} {
      // 같은 도메인 사용자만 읽기 가능
      allow read: if isSignedIn();
      
      // 자신의 정보만 생성/수정 가능
      allow create, update: if isSignedIn() && isSelf(userId);
      
      // 삭제는 불가능 (시간 경과에 따라 자동 삭제)
      allow delete: if false;
    }
    
    // posts 컬렉션 규칙 (게시글)
    match /posts/{postId} {
      // 인증된 사용자는 모든 게시글 읽기 가능
      allow read: if isSignedIn();
      
      // 이메일 인증된 사용자만 게시글 작성 가능
      allow create: if isSignedIn() && isEmailVerified() && 
                     request.resource.data.uid == request.auth.uid;
      
      // 작성자만 게시글 수정 가능 또는 좋아요 업데이트는 모든 인증된 사용자 가능
      allow update: if isSignedIn() && 
                     (resource.data.uid == request.auth.uid || 
                      request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes']));
      
      // 작성자만 게시글 삭제 가능
      allow delete: if isSignedIn() && resource.data.uid == request.auth.uid;
    }
    
    // 도메인별 채팅 규칙
    match /domains/{domain} {
      // 도메인 접근 권한 - 같은 도메인 사용자만 접근 가능
      allow read, write: if isSignedIn() && isSameDomain(domain);
      
      // 채팅방 목록
      match /chatRooms/{roomId} {
        // 같은 도메인 사용자는 채팅방 목록 조회 가능
        allow read: if isSignedIn() && isSameDomain(domain);
        
        // 같은 도메인 사용자는 채팅방 생성 가능
        allow create: if isSignedIn() && isSameDomain(domain);
        
        // 채팅방 업데이트 및 삭제는 생성자 또는 관리자만 가능
        allow update, delete: if isSignedIn() && 
                               isSameDomain(domain) && 
                               (resource.data.createdBy == request.auth.uid);
      }
      
      // 채팅 메시지
      match /chats/{chatId}/messages/{messageId} {
        // 같은 도메인 사용자는 메시지 조회 가능
        allow read: if isSignedIn() && isSameDomain(domain);
        
        // 같은 도메인 사용자는 메시지 작성 가능
        allow create: if isSignedIn() && 
                       isSameDomain(domain) && 
                       request.resource.data.authorUid == request.auth.uid;
        
        // 작성자만 메시지 수정/삭제 가능
        allow update, delete: if isSignedIn() && 
                               isSameDomain(domain) && 
                               resource.data.authorUid == request.auth.uid;
      }
    }
  }
} 